import streamlit as st
import pandas as pd

# -------------------------------
# üõ†Ô∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
# -------------------------------
st.set_page_config(page_title="‡πÅ‡∏ú‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏™‡∏ß‡∏¥‡∏ï", layout="wide")
st.title("üá®üá≠ ‡πÅ‡∏ú‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏™‡∏ß‡∏¥‡∏ï‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏ô‡∏î‡πå‡∏Ç‡∏≠‡∏á‡∏û‡∏µ‡πà‡∏≠‡∏∏‡πä‡∏Å & ‡∏ö‡∏¥‡∏ß ü§ç")
st.markdown("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏î‡∏π‡πÅ‡∏ú‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞")

# -------------------------------
# üì• ‡πÇ‡∏´‡∏•‡∏î Excel ‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡∏µ‡∏ó
# -------------------------------
excel_path = "Plan/Swiss_plan_app.xlsx"
xls = pd.ExcelFile(excel_path)
sheet_names = xls.sheet_names
selected_day = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô", sheet_names)

# ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡∏µ‡∏ó‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
df = pd.read_excel(excel_path, sheet_name=selected_day)
df.columns = df.columns.str.strip()  # ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå

# -------------------------------
# üíÖ CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö timeline ‡∏™‡∏≠‡∏á‡∏ù‡∏±‡πà‡∏á
# -------------------------------
timeline_css = """
<style>
.timeline {
    position: relative;
    margin: 50px 0;
    padding: 0;
}

.timeline::before {
    content: '';
    position: absolute;
    left: 50%;
    top: 0;
    bottom: 0;
    width: 6px;
    background: pink;
    margin-left: -3px;
}

.timeline-item {
    position: relative;
    width: 50%;
    padding: 20px;
    box-sizing: border-box;
}

.timeline-left {
    left: 0;
    text-align: right;
}

.timeline-right {
    left: 50%;
    text-align: left;
    position: absolute;
}

.timeline-box {
    background: white;
    color: black; /* ‚úÖ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÑ‡∏°‡πà‡∏à‡∏≤‡∏á */
    padding: 15px;
    border-radius: 10px;
    display: inline-block;
    max-width: 90%;
    box-shadow: 0 2px 10px rgba(0,0,0,0.2);
    font-size: 16px;
}
</style>
"""

# -------------------------------
# üß± ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML timeline ‡∏ó‡∏µ‡∏•‡∏∞‡∏Å‡∏•‡πà‡∏≠‡∏á
# -------------------------------
timeline_html = '<div class="timeline">'

for i, row in df.iterrows():
    # ‡∏Ç‡πâ‡∏≤‡∏°‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤ ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∑‡πà‡∏ô‡πÄ‡∏•‡∏¢
    if pd.isna(row.get("Time")) and pd.isna(row.get("Location")) and pd.isna(row.get("Destination")) and pd.isna(row.get("Activity")):
        continue

    # ‡∏™‡∏•‡∏±‡∏ö‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢‡∏Ç‡∏ß‡∏≤‡∏ï‡∏≤‡∏° index
    side = "timeline-left" if i % 2 == 0 else "timeline-right"

    # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á ‡πÅ‡∏•‡∏∞ fallback ‡∏ñ‡πâ‡∏≤‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á
    time = row["Time"] if pd.notna(row["Time"]) else "-"
    location = row["Location"] if pd.notna(row["Location"]) else "-"
    destination = row["Destination"] if pd.notna(row["Destination"]) else "-"
    activity = row["Activity"] if pd.notna(row["Activity"]) else "-"

    box = f"""
    <div class="timeline-item {side}">
        <div class="timeline-box">
            <b>üïí ‡πÄ‡∏ß‡∏•‡∏≤:</b> {time}<br>
            <b>üìç ‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á:</b> {location}<br>
            <b>üèÅ ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á:</b> {destination}<br>
            <b>üéØ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°:</b> {activity}
        </div>
    </div>
    """
    timeline_html += box

timeline_html += "</div>"

# -------------------------------
# ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
# -------------------------------
st.markdown(f"### üóìÔ∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {selected_day}")
st.markdown(timeline_css + timeline_html, unsafe_allow_html=True)
